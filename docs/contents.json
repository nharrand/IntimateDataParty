{
  "paths": [
    {
      "type": "file",
      "value": "index.md"
    },
    {
      "type": "dir",
      "name": "Code",
      "children": [
        {
          "type": "file",
          "value": "Code/Getting_started_with_Plotly.md"
        },
        {
          "type": "file",
          "value": "Code/Getting_started_with_Python.md"
        },
        {
          "type": "file",
          "value": "Code/Getting_started_with_R.md"
        }
      ]
    },
    {
      "type": "dir",
      "name": "More_Examples",
      "children": [
        {
          "type": "file",
          "value": "More_Examples/Python.md"
        },
        {
          "type": "file",
          "value": "More_Examples/R.md"
        }
      ]
    }
  ],
  "contents": [
    {
      "path": "index.md",
      "url": "index.html",
      "content": "# Welcome to the Intimate Data Party\n\nThis small website should give very simple code snippets to get started with your data exploration and visualizations, in Python (with [Matplot lib](https://matplotlib.org)), in R (with tidyverse and [ggplot2](https://ggplot2.tidyverse.org/)) and JavaScript (with [Plotly JS](https://plotly.com/javascript/)).\n\nEach of these libraries provide excellent data visualization capabilities. The point of this documentation is not to replace th\n\n## Activities for tonight's event\n\n### Phase I: Data exploration\n\n * Choose a product or service and consider the data they collect. It can be something you already use, are interested in, or have stopped using.\n * What type(s) of data do they collect? How often?\n * Which person is the data associated with? Think broadly about people who could be directly or indirectly captured in the data.\n * What information could be inferred from the data? About whom?\n * What other actors could be interested in this data? Why?\n * What data is \"essential\" for the product or service to function, and what is not?\n\n\n### Phase II: Design (Pick one of the following briefs)\n\n 1. Imagine you’re redesigning the product or service so it doesn’t collect unnecessary data. What would that look like?\n 2. Design an alternative data representation (e.g. data visualization, physicalization, sonification) that incorporates important information that the product or service fails to capture from the data it collects.\n 3. Design a dystopic application that exploits the data from all the other people captured by the data. What could it do?\n 4. Design a product or service re-identifies people from their data. What could you infer about them?\n\n\n\n",
      "html": "<h1 id=\"welcome-to-the-intimate-data-party\">Welcome to the Intimate Data Party <a class=\"heading-anchor-permalink\" href=\"#welcome-to-the-intimate-data-party\">#</a></h1>\n<p>This small website should give very simple code snippets to get started with your data exploration and visualizations, in Python (with <a href=\"https://matplotlib.org\">Matplot lib</a>), in R (with tidyverse and <a href=\"https://ggplot2.tidyverse.org/\">ggplot2</a>) and JavaScript (with <a href=\"https://plotly.com/javascript/\">Plotly JS</a>).</p>\n<p>Each of these libraries provide excellent data visualization capabilities. The point of this documentation is not to replace th</p>\n<h2 id=\"activities-for-tonight%E2%80%99s-event\">Activities for tonight’s event <a class=\"heading-anchor-permalink\" href=\"#activities-for-tonight%E2%80%99s-event\">#</a></h2>\n<h3 id=\"phase-i%3A-data-exploration\">Phase I: Data exploration <a class=\"heading-anchor-permalink\" href=\"#phase-i%3A-data-exploration\">#</a></h3>\n<ul>\n<li>Choose a product or service and consider the data they collect. It can be something you already use, are interested in, or have stopped using.</li>\n<li>What type(s) of data do they collect? How often?</li>\n<li>Which person is the data associated with? Think broadly about people who could be directly or indirectly captured in the data.</li>\n<li>What information could be inferred from the data? About whom?</li>\n<li>What other actors could be interested in this data? Why?</li>\n<li>What data is “essential” for the product or service to function, and what is not?</li>\n</ul>\n<h3 id=\"phase-ii%3A-design-(pick-one-of-the-following-briefs)\">Phase II: Design (Pick one of the following briefs) <a class=\"heading-anchor-permalink\" href=\"#phase-ii%3A-design-(pick-one-of-the-following-briefs)\">#</a></h3>\n<ol>\n<li>Imagine you’re redesigning the product or service so it doesn’t collect unnecessary data. What would that look like?</li>\n<li>Design an alternative data representation (e.g. data visualization, physicalization, sonification) that incorporates important information that the product or service fails to capture from the data it collects.</li>\n<li>Design a dystopic application that exploits the data from all the other people captured by the data. What could it do?</li>\n<li>Design a product or service re-identifies people from their data. What could you infer about them?</li>\n</ol>\n",
      "id": 0
    },
    {
      "path": "Code/Getting_started_with_Plotly.md",
      "url": "Code/Getting_started_with_Plotly.html",
      "content": "# Getting started with Plotly JS\n\nCheck out https://plotly.com/javascript/getting-started/\n",
      "html": "<h1 id=\"getting-started-with-plotly-js\">Getting started with Plotly JS <a class=\"heading-anchor-permalink\" href=\"#getting-started-with-plotly-js\">#</a></h1>\n<p>Check out <a href=\"https://plotly.com/javascript/getting-started/\">https://plotly.com/javascript/getting-started/</a></p>\n",
      "id": 1
    },
    {
      "path": "Code/Getting_started_with_Python.md",
      "url": "Code/Getting_started_with_Python.html",
      "content": "# Getting started with Python and Matplotlib\n\nThis guide helps beginners quickly set up Python, Jupyter Notebook, and Matplotlib for simple data visualization tasks.\n\n## Install Python and an environment\n\n\nDownload and Install Python: https://www.python.org/downloads/\n\nWhile installing Python, don't forget to install pip as well. Pip is the tool to download and install python libraries. You will need it.\n\nTo check that everything went right, open a terminal and type:\n\n```\npython --version \n```\n\nIf the install was successful, this should print the version of python you just installed.\n\nYou can now install Jupyter, a python notebook that will allow you to quickly work with your data.\n\n```\npip install jupyterlab\n```\n\nYou should also install Matplotlib, Pandas and Folium (three libraries we'll be using).\n\n```\npip install pandas matplotlib folium\n```\n\nTo start Jupyter, simply run:\n\n```\njupyter lab\n```\n\nThis command will give you a link to your local instance of Jupyter. (This should look like a url starting with 'https://localhost'.)\n\n\n## Loading your data\n\nIn the rest of this tutorial, we are going to develop a very simple example to illustrate how to work with a simple dataset. You can find this toy dataset <a href=\"https://raw.githubusercontent.com/nharrand/IntimateDataParty/refs/heads/main/samples/temperature_readings.csv\" download>here</a>.\n\nThis csv file contains temperature recordings with date and location data.\n\nFirst create a code block that import the libraries you want to work with:\n\n```\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.cm as cm\nimport matplotlib.colors as mcolors\nimport folium\nfrom folium.plugins import HeatMap\nfrom datetime import datetime\n```\n\nThen create a code block that loads your data. (You need to change the path to correspond to your csv file's path.)\n\n```\n# Load CSV into a dataframe df\ndf = pd.read_csv('data/temperature_readings.csv', parse_dates=['date'])\n```\n\nTo check your dataframe, you can simply create the following block:\n\n```\ndf\n```\n\nIf you run all your blocks, Jupyter should print a table containing your data.\n\n\n## Plotting temperature over time\n\nTo plot the evolution of temperature over time, you can run the following code block:\n\n```\n# Normalize temperature for colormap\nnorm = mcolors.Normalize(vmin=df['temperature'].min(), vmax=df['temperature'].max())\ncmap = plt.get_cmap('coolwarm')\n\n# Function to convert normalized color to hex\ndef temperature_to_hex(temp):\n    rgba = cmap(norm(temp))\n    return mcolors.to_hex(rgba)\n\n# Plot 1: Temperature over time\nplt.figure(figsize=(12, 5))\ncolors = [temperature_to_hex(t) for t in df['temperature']]\nplt.scatter(df['date'], df['temperature'], color=colors)\nplt.plot(df['date'], df['temperature'], color='gray', alpha=0.3)\nplt.title('Temperature Over Time')\nplt.xlabel('Date')\nplt.ylabel('Temperature (°C)')\nplt.grid(True)\nplt.xticks(rotation=45)\nplt.tight_layout()\nplt.show()\n```\n\n## Plotting locations\n\nTo display your datapoints on a map you can run the following:\n\n```\n# Plot 2: Map with temperature-colored points\nm = folium.Map(location=[50, 10], zoom_start=4)\n\n# Add points\nfor _, row in df.iterrows():\n    folium.CircleMarker(\n        location=[row['latitude'], row['longitude']],\n        radius=7,\n        color=None,\n        fill=True,\n        fill_opacity=0.7,\n        fill_color=temperature_to_hex(row['temperature']),\n        tooltip=f\"{row['date'].date()} - {row['temperature']}°C\"\n    ).add_to(m)\n\n# Display map\nm\n```\n\n\n\nYou can download the full notebook <a href=\"https://raw.githubusercontent.com/nharrand/IntimateDataParty/refs/heads/main/code/CSV_Temp_Geo.ipynb\" download>here</a>.\n\nYou'll find many more examples of plots in [Matplotlib's documentation](https://matplotlib.org/stable/plot_types/index).\n",
      "html": "<h1 id=\"getting-started-with-python-and-matplotlib\">Getting started with Python and Matplotlib <a class=\"heading-anchor-permalink\" href=\"#getting-started-with-python-and-matplotlib\">#</a></h1>\n<p>This guide helps beginners quickly set up Python, Jupyter Notebook, and Matplotlib for simple data visualization tasks.</p>\n<h2 id=\"install-python-and-an-environment\">Install Python and an environment <a class=\"heading-anchor-permalink\" href=\"#install-python-and-an-environment\">#</a></h2>\n<p>Download and Install Python: <a href=\"https://www.python.org/downloads/\">https://www.python.org/downloads/</a></p>\n<p>While installing Python, don’t forget to install pip as well. Pip is the tool to download and install python libraries. You will need it.</p>\n<p>To check that everything went right, open a terminal and type:</p>\n<pre><code>python --version \n</code></pre>\n<p>If the install was successful, this should print the version of python you just installed.</p>\n<p>You can now install Jupyter, a python notebook that will allow you to quickly work with your data.</p>\n<pre><code>pip install jupyterlab\n</code></pre>\n<p>You should also install Matplotlib, Pandas and Folium (three libraries we’ll be using).</p>\n<pre><code>pip install pandas matplotlib folium\n</code></pre>\n<p>To start Jupyter, simply run:</p>\n<pre><code>jupyter lab\n</code></pre>\n<p>This command will give you a link to your local instance of Jupyter. (This should look like a url starting with ‘<a href=\"https://localhost\">https://localhost</a>’.)</p>\n<h2 id=\"loading-your-data\">Loading your data <a class=\"heading-anchor-permalink\" href=\"#loading-your-data\">#</a></h2>\n<p>In the rest of this tutorial, we are going to develop a very simple example to illustrate how to work with a simple dataset. You can find this toy dataset <a href=\"https://raw.githubusercontent.com/nharrand/IntimateDataParty/refs/heads/main/samples/temperature_readings.csv\" download>here</a>.</p>\n<p>This csv file contains temperature recordings with date and location data.</p>\n<p>First create a code block that import the libraries you want to work with:</p>\n<pre><code>import pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.cm as cm\nimport matplotlib.colors as mcolors\nimport folium\nfrom folium.plugins import HeatMap\nfrom datetime import datetime\n</code></pre>\n<p>Then create a code block that loads your data. (You need to change the path to correspond to your csv file’s path.)</p>\n<pre><code># Load CSV into a dataframe df\ndf = pd.read_csv('data/temperature_readings.csv', parse_dates=['date'])\n</code></pre>\n<p>To check your dataframe, you can simply create the following block:</p>\n<pre><code>df\n</code></pre>\n<p>If you run all your blocks, Jupyter should print a table containing your data.</p>\n<h2 id=\"plotting-temperature-over-time\">Plotting temperature over time <a class=\"heading-anchor-permalink\" href=\"#plotting-temperature-over-time\">#</a></h2>\n<p>To plot the evolution of temperature over time, you can run the following code block:</p>\n<pre><code># Normalize temperature for colormap\nnorm = mcolors.Normalize(vmin=df['temperature'].min(), vmax=df['temperature'].max())\ncmap = plt.get_cmap('coolwarm')\n\n# Function to convert normalized color to hex\ndef temperature_to_hex(temp):\n    rgba = cmap(norm(temp))\n    return mcolors.to_hex(rgba)\n\n# Plot 1: Temperature over time\nplt.figure(figsize=(12, 5))\ncolors = [temperature_to_hex(t) for t in df['temperature']]\nplt.scatter(df['date'], df['temperature'], color=colors)\nplt.plot(df['date'], df['temperature'], color='gray', alpha=0.3)\nplt.title('Temperature Over Time')\nplt.xlabel('Date')\nplt.ylabel('Temperature (°C)')\nplt.grid(True)\nplt.xticks(rotation=45)\nplt.tight_layout()\nplt.show()\n</code></pre>\n<h2 id=\"plotting-locations\">Plotting locations <a class=\"heading-anchor-permalink\" href=\"#plotting-locations\">#</a></h2>\n<p>To display your datapoints on a map you can run the following:</p>\n<pre><code># Plot 2: Map with temperature-colored points\nm = folium.Map(location=[50, 10], zoom_start=4)\n\n# Add points\nfor _, row in df.iterrows():\n    folium.CircleMarker(\n        location=[row['latitude'], row['longitude']],\n        radius=7,\n        color=None,\n        fill=True,\n        fill_opacity=0.7,\n        fill_color=temperature_to_hex(row['temperature']),\n        tooltip=f&quot;{row['date'].date()} - {row['temperature']}°C&quot;\n    ).add_to(m)\n\n# Display map\nm\n</code></pre>\n<p>You can download the full notebook <a href=\"https://raw.githubusercontent.com/nharrand/IntimateDataParty/refs/heads/main/code/CSV_Temp_Geo.ipynb\" download>here</a>.</p>\n<p>You’ll find many more examples of plots in <a href=\"https://matplotlib.org/stable/plot_types/index\">Matplotlib’s documentation</a>.</p>\n",
      "id": 2
    },
    {
      "path": "Code/Getting_started_with_R.md",
      "url": "Code/Getting_started_with_R.html",
      "content": "# Getting started with R\n\nThis guide helps beginners quickly set up R, Rstudio Notebook, and tydiverse for simple data visualization tasks.\n\n\n## R and Rstudio\n\nDownload and install R: https://cran.rstudio.com/\n\nDownload and install Rstudio: https://posit.co/download/rstudio-desktop/\n \nInstall tidyverse (A collection of libraries for data analysis): \n - In Rstudio: 'Tools' > 'Install packages'\n - Type \"tidyverse\"\n - Click \"install\"\n\n\n## Create a Notebook\n\nIn the rest of this tutorial, we are going to develop a very simple example to illustrate how to work with a simple dataset. You can find this toy dataset <a href=\"samples/temperature_readings.csv\" download>here</a>.\n\nThis csv file contains temperature recordings with date and location data.\n\nFirst create a code block that import the libraries you want to work with:\n\n```{r}\nlibrary(tidyverse)\n```\n\nThen create a code block that loads your data. (You need to change the path to correspond to your csv file's path.)\n\n```{r}\ndata <- read_csv(\"../samples/temperature_readings.csv\")\n```\n\nTo check your dataframe, you can simply create the following block:\n\n```{r}\nhead(data)\n```\n\n## Plotting temperature over time\n\nTo plot the evolution of temperature over time, you can run the following code block:\n\n```{r}\ndata %>%\n  mutate(date = as.Date(date)) %>%  # Convert date column to date type\n  ggplot(aes(x = date, y = temperature)) +\n  geom_line(color = \"blue\") +\n  labs(title = \"Temperature Over Time\",\n       x = \"Date\",\n       y = \"Temperature\") +\n  theme_minimal()\n```\n\n## Plotting locations\n\nTo display your datapoints on a map you can run the following:\n\n```{r}\ninstall.packages(\"mapview\")\ninstall.packages(\"sf\")\n```\n\n\n```{r}\nlibrary(sf)\nlibrary(mapview)\n```\n\n\n```{r}\nmapview(data, xcol = \"longitude\", ycol = \"latitude\", crs = 4269, grid = FALSE)\n```\n\n\n\nYou can download the full notebook <a href=\"code/CSV_Temp_Geo.Rmb\" download>here</a>.\n\nYou'll find many more examples of plots in [Ggplot2's documentation](https://r4ds.had.co.nz/data-visualisation.html).\n",
      "html": "<h1 id=\"getting-started-with-r\">Getting started with R <a class=\"heading-anchor-permalink\" href=\"#getting-started-with-r\">#</a></h1>\n<p>This guide helps beginners quickly set up R, Rstudio Notebook, and tydiverse for simple data visualization tasks.</p>\n<h2 id=\"r-and-rstudio\">R and Rstudio <a class=\"heading-anchor-permalink\" href=\"#r-and-rstudio\">#</a></h2>\n<p>Download and install R: <a href=\"https://cran.rstudio.com/\">https://cran.rstudio.com/</a></p>\n<p>Download and install Rstudio: <a href=\"https://posit.co/download/rstudio-desktop/\">https://posit.co/download/rstudio-desktop/</a></p>\n<p>Install tidyverse (A collection of libraries for data analysis):</p>\n<ul>\n<li>In Rstudio: ‘Tools’ &gt; ‘Install packages’</li>\n<li>Type “tidyverse”</li>\n<li>Click “install”</li>\n</ul>\n<h2 id=\"create-a-notebook\">Create a Notebook <a class=\"heading-anchor-permalink\" href=\"#create-a-notebook\">#</a></h2>\n<p>In the rest of this tutorial, we are going to develop a very simple example to illustrate how to work with a simple dataset. You can find this toy dataset <a href=\"samples/temperature_readings.csv\" download>here</a>.</p>\n<p>This csv file contains temperature recordings with date and location data.</p>\n<p>First create a code block that import the libraries you want to work with:</p>\n<pre><code class=\"language-{r}\">library(tidyverse)\n</code></pre>\n<p>Then create a code block that loads your data. (You need to change the path to correspond to your csv file’s path.)</p>\n<pre><code class=\"language-{r}\">data &lt;- read_csv(&quot;../samples/temperature_readings.csv&quot;)\n</code></pre>\n<p>To check your dataframe, you can simply create the following block:</p>\n<pre><code class=\"language-{r}\">head(data)\n</code></pre>\n<h2 id=\"plotting-temperature-over-time\">Plotting temperature over time <a class=\"heading-anchor-permalink\" href=\"#plotting-temperature-over-time\">#</a></h2>\n<p>To plot the evolution of temperature over time, you can run the following code block:</p>\n<pre><code class=\"language-{r}\">data %&gt;%\n  mutate(date = as.Date(date)) %&gt;%  # Convert date column to date type\n  ggplot(aes(x = date, y = temperature)) +\n  geom_line(color = &quot;blue&quot;) +\n  labs(title = &quot;Temperature Over Time&quot;,\n       x = &quot;Date&quot;,\n       y = &quot;Temperature&quot;) +\n  theme_minimal()\n</code></pre>\n<h2 id=\"plotting-locations\">Plotting locations <a class=\"heading-anchor-permalink\" href=\"#plotting-locations\">#</a></h2>\n<p>To display your datapoints on a map you can run the following:</p>\n<pre><code class=\"language-{r}\">install.packages(&quot;mapview&quot;)\ninstall.packages(&quot;sf&quot;)\n</code></pre>\n<pre><code class=\"language-{r}\">library(sf)\nlibrary(mapview)\n</code></pre>\n<pre><code class=\"language-{r}\">mapview(data, xcol = &quot;longitude&quot;, ycol = &quot;latitude&quot;, crs = 4269, grid = FALSE)\n</code></pre>\n<p>You can download the full notebook <a href=\"code/CSV_Temp_Geo.Rmb\" download>here</a>.</p>\n<p>You’ll find many more examples of plots in <a href=\"https://r4ds.had.co.nz/data-visualisation.html\">Ggplot2’s documentation</a>.</p>\n",
      "id": 3
    },
    {
      "path": "More_Examples/Python.md",
      "url": "More_Examples/Python.html",
      "content": "# More Python examples with Jupyter\n\nNatural Cycles: <a href=\"samples/NaturalCycle.csv\" download>dataset sample</a>, <a href=\"code/NaturalCycle.ipynb\" download>notebook</a>.\n\nOura: <a href=\"samples/oura.csv\" download>dataset sample</a>, <a href=\"code/Oura.ipynb\" download>notebook</a>.\n\nCalendar: <a href=\"samples/FemTech_and_Feminist_Tech_Calendar.ics\" download>dataset sample</a>, <a href=\"code/Calendar.ipynb\" download>notebook</a>.\n\n",
      "html": "<h1 id=\"more-python-examples-with-jupyter\">More Python examples with Jupyter <a class=\"heading-anchor-permalink\" href=\"#more-python-examples-with-jupyter\">#</a></h1>\n<p>Natural Cycles: <a href=\"samples/NaturalCycle.csv\" download>dataset sample</a>, <a href=\"code/NaturalCycle.ipynb\" download>notebook</a>.</p>\n<p>Oura: <a href=\"samples/oura.csv\" download>dataset sample</a>, <a href=\"code/Oura.ipynb\" download>notebook</a>.</p>\n<p>Calendar: <a href=\"samples/FemTech_and_Feminist_Tech_Calendar.ics\" download>dataset sample</a>, <a href=\"code/Calendar.ipynb\" download>notebook</a>.</p>\n",
      "id": 4
    },
    {
      "path": "More_Examples/R.md",
      "url": "More_Examples/R.html",
      "content": "# More R examples\n\nNatural Cycles: <a href=\"samples/NaturalCycle.csv\" download>dataset sample</a>, <a href=\"code/NaturalCycles.Rmd\" download>notebook</a>.\n\nOura: <a href=\"samples/oura.csv\" download>dataset sample</a>, <a href=\"code/Oura.Rmd\" download>notebook</a>.\n\nCalendar: <a href=\"samples/FemTech_and_Feminist_Tech_Calendar.ics\" download>dataset sample</a>, <a href=\"code/Calendar.Rmd\" download>notebook</a>.\n",
      "html": "<h1 id=\"more-r-examples\">More R examples <a class=\"heading-anchor-permalink\" href=\"#more-r-examples\">#</a></h1>\n<p>Natural Cycles: <a href=\"samples/NaturalCycle.csv\" download>dataset sample</a>, <a href=\"code/NaturalCycles.Rmd\" download>notebook</a>.</p>\n<p>Oura: <a href=\"samples/oura.csv\" download>dataset sample</a>, <a href=\"code/Oura.Rmd\" download>notebook</a>.</p>\n<p>Calendar: <a href=\"samples/FemTech_and_Feminist_Tech_Calendar.ics\" download>dataset sample</a>, <a href=\"code/Calendar.Rmd\" download>notebook</a>.</p>\n",
      "id": 5
    }
  ]
}